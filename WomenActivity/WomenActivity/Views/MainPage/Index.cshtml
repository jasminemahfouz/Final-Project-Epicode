@model WomenActivity.Models.HomePageViewModel

@{
    ViewData["Title"] = "Main Page";
    Layout = "~/Views/Shared/_Layout.cshtml";


}

@using System.Globalization
@{
    var cultureInfo = new CultureInfo("en-US");
}

<link rel="stylesheet" href="~/css/custom-main.css" />

<div class="mainpage-container">
    <header class="mainpage-header">
        <h2 class="page-title">Main Page</h2>
        <p id="currentDate" class="current-date" onclick="toggleCalendar()">
            @Model.CurrentDate.ToString("dddd, MMMM d, yyyy", cultureInfo)
        </p>

    </header>
    <section class="tasks-for-day-container">
        <h3 class="tasks-for-day">Tasks</h3>
        @if (Model.TaskItems != null && Model.TaskItems.Any())
        {
            <ul class="task-list">
                @foreach (var task in Model.TaskItems)
                {
                    <li class="task-item" style="border-left: 8px solid @task.Color;">
                        <strong>@task.Name</strong>: @task.Description (@task.Type) - @task.Time.ToString("t")
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="no-tasks-message">No tasks for selected date.</p>
        }
    </section>
    <div class="calendar-controls">
        <button class="btn btn-navigation" onclick="location.href='@Url.Action("ChangeCalendarDate", "MainPage", new { userId = @User.FindFirst("UserId")?.Value, year = Model.Calendar.CurrentYear, month = Model.Calendar.CurrentMonth - 1 })'">
            <i class="fas fa-arrow-left icon-arrow"></i>
        </button>
        <span class="calendar-title"> @Model.Calendar.CurrentMonth / @Model.Calendar.CurrentYear</span>
        <button class="btn btn-navigation" onclick="location.href='@Url.Action("ChangeCalendarDate", "MainPage", new { userId = @User.FindFirst("UserId")?.Value, year = Model.Calendar.CurrentYear, month = Model.Calendar.CurrentMonth + 1 })'">
            <i class="fas fa-arrow-right icon-arrow"></i>
        </button>
    </div>

    <section id="calendarContainer" class="calendar-container" style="display: @(Model.ShowCalendar ? "block" : "none");">
        <table class="calendar-table">
            <thead>
                <tr>
                    @foreach (var day in cultureInfo.DateTimeFormat.AbbreviatedDayNames)
                    {
                        <th>@day</th>
                    }
                </tr>
            </thead>

            <tbody>
                @{
                    int daysInMonth = Model.Calendar?.DaysInMonth ?? 0;
                    int currentDay = 1;
                    for (int i = 0; i < 5; i++) // Assume 5 weeks in a month
                    {
                        <tr>
                            @for (int j = 0; j < 7; j++)
                            {
                                if (currentDay <= daysInMonth)
                                {
                                    var taskCount = Model.TasksPerDay != null && Model.TasksPerDay.ContainsKey(new DateTime(Model.Calendar.CurrentYear, Model.Calendar.CurrentMonth, currentDay)) ?
                                                    Model.TasksPerDay[new DateTime(Model.Calendar.CurrentYear, Model.Calendar.CurrentMonth, currentDay)] : 0;
                                    <td class="calendar-day">
                                        <a href="@Url.Action("GetTasksForDate", "MainPage", new { userId = @User.FindFirst("UserId")?.Value, date = new DateTime(Model.Calendar.CurrentYear, Model.Calendar.CurrentMonth, currentDay).ToString("yyyy-MM-ddTHH:mm:ss") })" class="day-link">
                                            <span class="day-number">@currentDay</span>
                                            <span class="task-count">@taskCount</span>
                                        </a>
                                    </td>
                                    currentDay++;
                                }
                                else
                                {
                                    <td class="empty-day"></td>
                                }
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </section>

    <button id="addTaskButton" class="btn btn-add-task" onclick="toggleTaskForm()">➕</button>

    <section id="taskFormContainer" class="task-form-container" style="display: none;">
        <form id="createTaskForm" method="post" action="/api/TaskItems/Create" class="task-form">
            <div class="form-group">
                <label for="Name" class="form-label"><i class="fas fa-thumbtack"></i> Name</label>
                <input id="Name" name="Name" class="form-control task-input" required />
            </div>
            <div class="form-group">
                <label for="Description" class="form-label"><i class="fas fa-pen"></i> Description</label>
                <textarea id="Description" name="Description" class="form-control task-textarea"></textarea>
            </div>
            <div class="form-group">
                <label for="Time" class="form-label"><i class="fas fa-clock"></i> Time</label>
                <input id="Time" name="Time" type="datetime-local" class="form-control task-input" required />
            </div>
            <div class="form-group">
                <label for="Color" class="form-label"><i class="fas fa-palette"></i> Color</label>
                <input id="Color" name="Color" class="form-control task-input" required />
            </div>
            <div class="form-group">
                <label for="Type" class="form-label"><i class="fas fa-list"></i> Type</label>
                <input id="Type" name="Type" class="form-control task-input" required />
            </div>
            <input type="hidden" name="UserId" value="@User.FindFirst("UserId")?.Value" />
            <div class="button-group">
                <button type="submit" class="btn btn-primary task-button">💾 </button>
            </div>
        </form>
    </section>


</div>

@section Scripts {
    <script>function toggleTaskForm() {
            var taskFormContainer = document.getElementById("taskFormContainer");
            taskFormContainer.style.display = taskFormContainer.style.display === "none" ? "block" : "none";
        }

        function toggleCalendar() {
            var calendarContainer = document.getElementById("calendarContainer");
            calendarContainer.style.display = calendarContainer.style.display === "none" ? "block" : "none";
        }</script>
}
